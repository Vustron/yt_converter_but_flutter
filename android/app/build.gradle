plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

// TODO: pang load sa keystore
// def keystoreProperties = new Properties()
// def keystorePropertiesFile = rootProject.file("key.properties")
// if (keystorePropertiesFile.exists()) {
//     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// }

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.vustron_yt_converter.com"
    compileSdkVersion 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId = "com.vustron_yt_converter.com"
        minSdk = flutter.minSdkVersion
        minSdkVersion 24
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
          // TODO: Add your own signing config for the release build.
        // Signing with the debug keys for now, so `flutter run --release` works.
        // release {
        //     keyAlias keystoreProperties['keyAlias']
        //     keyPassword keystoreProperties['keyPassword']
        //     storeFile file(keystoreProperties['storeFile'])
        //     storePassword keystoreProperties['storePassword']
        // }
        
        // debug {
        //     keyAlias keystoreProperties['keyAliasDebug']
        //     keyPassword keystoreProperties['keyPasswordDebug']
        //     storeFile file(keystoreProperties['storeFileDebug'])
        //     storePassword keystoreProperties['storePasswordDebug']
        // }
        release {  
            signingConfig = signingConfigs.debug
        }
        debug {
             signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
